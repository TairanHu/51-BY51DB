C51 COMPILER V9.01   OLED                                                                  07/13/2015 13:32:27 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN oled.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE oled.c COMPACT BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "oled.h"
   2          
   3          void Delay_ms(int z)
   4          {
   5   1              int x,y;
   6   1              for(x=0;x<60;x++)
   7   1                      for(y=z;y>0;y--);
   8   1      }
   9          
  10          
  11          void OLED_Test(void)
  12          {
  13   1              uchar i;
  14   1              for(i=0;i<4;i++)
  15   1              Show_Chinese(i*32,0,i);
  16   1              
  17   1              for(i=4;i<7;i++)
  18   1              Show_Chinese(i*32+16,4,i);
  19   1      }
  20          
  21          void Write_Com(uchar com)//写命令
  22          {
  23   1              uchar i;
  24   1              LCD_DC=0;//写命令
  25   1              //LED_SCL=0;
  26   1              for(i=0;i<8;i++)
  27   1              {
  28   2                      LCD_SCL=0;
  29   2                      if((com<<i)&0x80)
  30   2                              LCD_SDE=1;
  31   2                      else
  32   2                              LCD_SDE=0;
  33   2                      LCD_SCL=1;
  34   2              }
  35   1      }
  36          void Write_Data(uchar date)//写数据
  37          {
  38   1              uchar i;
  39   1              LCD_DC=1;//写数据
  40   1              //LED_SCL=0;
  41   1              for(i=0;i<8;i++)
  42   1              {
  43   2                      LCD_SCL=0;
  44   2                      if((date<<i)&0x80)
  45   2                              LCD_SDE=1;
  46   2                      else
  47   2                              LCD_SDE=0;
  48   2                      LCD_SCL=1;
  49   2              }
  50   1      }
  51          void Set_Pos(uchar x,uchar y)//设定光标起始位置
  52          {
  53   1              Write_Com(0xb0+y);//设置起始page
  54   1              Write_Com(((x&0xf0)>>4)|0x10);//送高位起始地址
  55   1              Write_Com((x&0x0f)|0x01);//送低位起始地址                       
C51 COMPILER V9.01   OLED                                                                  07/13/2015 13:32:27 PAGE 2   

  56   1      }
  57          void LCD_Fill(void)//写满屏
  58          {
  59   1              uchar y,x;      
  60   1              for(y=0;y<8;y++)
  61   1              {
  62   2                      Write_Com(0xb0+y);
  63   2                      Write_Com(0x01);
  64   2                      Write_Com(0x10);
  65   2                      for(x=0;x<X_width;x++)
  66   2                              Write_Data(0xff);
  67   2              }
  68   1      }
  69          void LCD_Cls(void)//清屏
  70          {
  71   1              uchar y,x;      
  72   1              for(y=0;y<8;y++)
  73   1              {
  74   2                      Write_Com(0xb0+y);
  75   2                      Write_Com(0x01);
  76   2                      Write_Com(0x10); 
  77   2                      for(x=0;x<X_width;x++)
  78   2                              Write_Data(0);
  79   2              }
  80   1      } 
  81          void LCD_Init(void)
  82          {
  83   1              LCD_CS=0;
  84   1              LCD_SCL=1;
  85   1              //LCD_CS=1;     //预制SLK和SS为高电平   
  86   1              LCD_RST=0;
  87   1              Delay_ms(30);
  88   1              LCD_RST=1;
  89   1              
  90   1              //从上电到下面开始初始化要有足够的时间，即等待RC复位完毕   
  91   1        
  92   1        Write_Com(0xae);//关闭显示
  93   1        Write_Com(0x00);//---set low column address
  94   1        Write_Com(0x10);//---set high column address
  95   1        Write_Com(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
  96   1      
  97   1        Write_Com(0x81);//--set contrast control register
  98   1        Write_Com(0xcf); // Set SEG Output Current Brightness
  99   1      
 100   1        Write_Com(0xa1);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 101   1        Write_Com(0xc8);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 102   1        Write_Com(0xa6);//--set normal display                 (0xa7)
 103   1      
 104   1        Write_Com(0xa8);//--set multiplex ratio(1 to 64)
 105   1        Write_Com(0x3f);//--1/64 duty
 106   1        Write_Com(0xd3);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 107   1        Write_Com(0x00);//-not offset
 108   1      
 109   1        Write_Com(0xd5);//--set display clock divide ratio/oscillator frequency
 110   1        Write_Com(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
 111   1      
 112   1        Write_Com(0xd9);//--set pre-charge period
 113   1        Write_Com(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 114   1      
 115   1        Write_Com(0xda);//--set com pins hardware configuration
 116   1        Write_Com(0x12);
 117   1        Write_Com(0xdb);//--set vcomh
C51 COMPILER V9.01   OLED                                                                  07/13/2015 13:32:27 PAGE 3   

 118   1        Write_Com(0x40);//Set VCOM Deselect Level
 119   1        Write_Com(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
 120   1        Write_Com(0x02);//
 121   1        Write_Com(0x8d);//--set Charge Pump enable/disable
 122   1        Write_Com(0x14);//--set(0x10) disable
 123   1        Write_Com(0xa4);// Disable Entire Display On (0xa4/0xa5)
 124   1        Write_Com(0xa6);// Disable Inverse Display On (0xa6/a7) 
 125   1        Write_Com(0xaf);//--turn on oled panel
 126   1        LCD_Cls();  //初始清屏
 127   1        Set_Pos(0,0);
 128   1      }
 129          
 130          
 131          void Show_f6x8str(uchar x,uchar y,uchar *ch)
 132          {
 133   1        uchar c=0,i=0,j=0;      
 134   1        while(ch[j]!='\0')
 135   1        {    
 136   2          c =ch[j]-32;
 137   2          if(x>126){x=0;y++;} //换行
 138   2          Set_Pos(x,y);    
 139   2              for(i=0;i<6;i++)     
 140   2                Write_Data(f6x8[c][i]);  
 141   2              x+=6;
 142   2              j++;
 143   2        }
 144   1      }       
 145          
 146          int My_pow(uchar m,uchar n)             //幂函数
 147          {
 148   1              int result=1;    
 149   1              while(n--)result*=m;    
 150   1              return result;  
 151   1      }
 152          
 153          void Show_Num_f8x16(uchar x,uchar y,int num,uchar len)
 154          {
 155   1              uchar temp,t,i;
 156   1              for(t=0;t<len;t++)
 157   1              {
 158   2                      temp=(num/My_pow(10,len-t-1))%10;
 159   2                      //if(x>120){x=0;y++;}//换行
 160   2                      Set_Pos(x,y);//设定高8位起始位置
 161   2                      for(i=0;i<8;i++)     
 162   2                              Write_Data(f8x16[(temp+16)*16+i]);
 163   2                      Set_Pos(x,y+1);//设定低八位起始位置
 164   2                      for(i=0;i<8;i++)     
 165   2                              Write_Data(f8x16[(temp+16)*16+8+i]);
 166   2                      x+=8;
 167   2              }       
 168   1      }
 169          
 170           
 171          void Show_Num_f6x8(uchar x,uchar y,int num,uchar len)
 172          {
 173   1              uchar temp,t,i;
 174   1              for(t=0;t<len;t++)
 175   1              {
 176   2                      temp=(num/My_pow(10,len-t-1))%10;
 177   2                      //if(x>126){x=0;y++;}//换行
 178   2                      Set_Pos(x,y);//设定高8位起始位置
 179   2                      for(i=0;i<6;i++)     
C51 COMPILER V9.01   OLED                                                                  07/13/2015 13:32:27 PAGE 4   

 180   2                              Write_Data(f6x8[temp+16][i]);   
 181   2                      x+=6;
 182   2              }       
 183   1      }
 184          
 185          void Show_f8x16str(uchar x,uchar y,uchar *ch)//显示8x16字符串
 186          {
 187   1        uchar c=0,i=0,j=0;
 188   1              
 189   1        while(ch[j]!='\0')
 190   1        {    
 191   2          c=ch[j]-32;
 192   2          //if(x>120){x=0;y++;}//换行
 193   2      
 194   2          Set_Pos(x,y);//设定高8位起始位置    
 195   2              for(i=0;i<8;i++)     
 196   2                      Write_Data(f8x16[c*16+i]);
 197   2              Set_Pos(x,y+1);//设定低八位起始位置    
 198   2              for(i=0;i<8;i++)     
 199   2                      Write_Data(f8x16[c*16+i+8]);  
 200   2              x+=8;
 201   2              j++;
 202   2        }
 203   1      }
 204          
 205          
 206          //      
 207          void Show_Chinese(uchar x,uchar y,uchar N)
 208          {
 209   1              uchar i;
 210   1              int adder=128*N;                
 211   1              Set_Pos(x,y);
 212   1              for(i=0;i<32;i++)
 213   1              {               
 214   2                      Write_Data(logo[adder]);
 215   2                      adder++;
 216   2              }                  
 217   1              Set_Pos(x,y + 1); 
 218   1              for(i=0;i<32;i++) 
 219   1              {              
 220   2                      Write_Data(logo[adder]);
 221   2                      adder++;
 222   2              }               
 223   1              Set_Pos(x,y + 2); 
 224   1              for(i=0;i<32;i++) 
 225   1              {              
 226   2                      Write_Data(logo[adder]);
 227   2                      adder++;
 228   2              }
 229   1              Set_Pos(x,y + 3); 
 230   1              for(i=0;i<32;i++) 
 231   1              {              
 232   2                      Write_Data(logo[adder]);
 233   2                      adder++;
 234   2              }
 235   1      } 
 236          
 237          
 238          void Show_Picture(uchar Long,uchar *pp,uchar EN)
 239          {
 240   1              uchar y,x,null; 
 241   1      
C51 COMPILER V9.01   OLED                                                                  07/13/2015 13:32:27 PAGE 5   

 242   1              null=(128-Long)/2;
 243   1              for(y=0;y<8;y++)
 244   1              {
 245   2                      Write_Com(0xb0+y);
 246   2                      Write_Com(0x01);
 247   2                      Write_Com(0x10);
 248   2      
 249   2                      for(x=0;x<null;x++)
 250   2                      {
 251   3                              if(EN)
 252   3                              Write_Data(0xff);
 253   3                              else  Write_Data(0);
 254   3                      }
 255   2      
 256   2                      for(x=null;x<Long+null;x++)
 257   2                      {
 258   3                              if(EN)
 259   3                              Write_Data(*(pp++));
 260   3      
 261   3                              else Write_Data(~*(pp++));
 262   3                      }
 263   2                      for(x=Long+null;x<128;x++)
 264   2                      {
 265   3                              if(EN)
 266   3                              Write_Data(0xff);
 267   3                              else  Write_Data(0);
 268   3                      }
 269   2              }               
 270   1      }
 271          
 272          
 273          //void Show_8x16Str1(u8 x,u8 y,u8 N)
 274          //{
 275          //      u8 i;
 276          //      int adder=16*N;         
 277          //      Set_Pos(x,y);
 278          //      for(i=0;i<8;i++)
 279          //      {               
 280          //              //Write_Data(Title3[adder]);
 281          //              adder++;
 282          //      }                  
 283          //      Set_Pos(x,y + 1); 
 284          //      for(i=0;i<8;i++) 
 285          //      {              
 286          //              //Write_Data(Title3[adder]);
 287          //              adder++;
 288          //      }       
 289          //}
 290          
 291          //void Show_16x16Str(u8 x,u8 y,u8 N)
 292          //{
 293          //      u8 i;
 294          //      int adder=32*N;         
 295          //      Set_Pos(x,y);
 296          //      for(i=0;i<16;i++)
 297          //      {               
 298          //              //Write_Data(Title1[adder]);
 299          //              adder++;
 300          //      }                  
 301          //      Set_Pos(x,y + 1); 
 302          //      for(i=0;i<16;i++) 
 303          //      {              
C51 COMPILER V9.01   OLED                                                                  07/13/2015 13:32:27 PAGE 6   

 304          //              //Write_Data(Title1[adder]);
 305          //              adder++;
 306          //      }       
 307          //}
 308          
 309          //void Show_16x32Str(u8 x,u8 y,u8 N)
 310          //{
 311          //      u8 i;
 312          //      int adder=64*N;         
 313          //      Set_Pos(x,y);
 314          //      for(i=0;i<16;i++)
 315          //      {               
 316          //              //Write_Data(Title2[adder]);
 317          //              adder++;
 318          //      }                  
 319          //      Set_Pos(x,y + 1); 
 320          //      for(i=0;i<16;i++) 
 321          //      {              
 322          //              //Write_Data(Title2[adder]);
 323          //              adder++;
 324          //      }
 325          //      Set_Pos(x,y + 2); 
 326          //      for(i=0;i<16;i++) 
 327          //      {              
 328          //              //Write_Data(Title2[adder]);
 329          //              adder++;
 330          //      }
 331          //      Set_Pos(x,y + 3); 
 332          //      for(i=0;i<16;i++) 
 333          //      {              
 334          //              //Write_Data(Title2[adder]);
 335          //              adder++;
 336          //      }       
 337          //}
 338          
 339          //void Show_Chinese(u8 x,u8 y,u8 N)
 340          //{
 341          //      u8 i;
 342          //      int adder=28*N;         
 343          //      Set_Pos(x,y);
 344          //      for(i=0;i<14;i++)
 345          //      {               
 346          //              //Write_Data(Title[adder]);
 347          //              adder++;
 348          //      }                  
 349          //      Set_Pos(x,y + 1); 
 350          //      for(i=0;i<14;i++) 
 351          //      {              
 352          //              //Write_Data(Title[adder]);
 353          //              adder++;
 354          //      }               
 355          //} 
 356          
 357          //void Show_Title(void)
 358          //{
 359          //      u8 i;
 360          //      for(i=0;i<8;i++)
 361          //      Show_16x16Str(i*16-1,0,i);
 362          
 363          //      for(i=0;i<8;i++)
 364          //      Show_16x32Str(i*15+1,2,i);
 365          
C51 COMPILER V9.01   OLED                                                                  07/13/2015 13:32:27 PAGE 7   

 366          //      for(i=0;i<16;i++)
 367          //      Show_8x16Str1(i*8,6,i);
 368          //      
 369          //      delay_ms(500);
 370          //      delay_ms(500);
 371          //      delay_ms(500);
 372          //      delay_ms(500);
 373          
 374          //      LCD_Cls();
 375          //}
 376          
 377          
 378          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1309    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      35
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
